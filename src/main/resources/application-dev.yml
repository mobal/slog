amazon:
  aws:
    s3:
      accessKey: ${S3_ACCESSKEY:minioadmin}
      host: ${S3_HOST:http://localhost}
      port: ${S3_PORT:9090}
      region: ${S3_REGION:eu-central-1}
      secretKey: ${S3_SECRETKEY:minioadmin}
logging:
  level:
    ROOT: INFO
    org:
      hibernate: INFO
      mongodb: INFO
      springframework:
        security: DEBUG
        web: INFO
mongock:
  change-logs-scan-package: hu.netcode.slog.changelog
server:
  port: ${SERVER_PORT:8080}
slog:
  paging:
    size: 10
spring:
  data:
    mongodb:
      uri: mongodb+srv://${MONGODB_USER:root}:${MONGODB_PASSWORD:example}@${MONGODB_HOST:mongo}/${MONGODB_DB:dev}?retryWrites=true&w=majority
  mvc:
    throw-exception-if-no-handler-found: true
  output:
    ansi:
      enabled: ALWAYS
  security:
    oauth2:
      client:
        registration:
          facebook:
            client-id: ${OAUTH2_FACEBOOK_CLIENT_ID}
            client-secret: ${OAUTH2_FACEBOOK_CLIENT_SECRET}
          github:
            client-id: ${OAUTH2_GITHUB_CLIENT_ID}
            client-secret: ${OAUTH2_GITHUB_CLIENT_SECRET}
          google:
            client-id: ${OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH2_GOOGLE_CLIENT_SECRET}
springdoc:
  override-with-generic-response: false
